<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hisign.xingzhen.xz.mapper.TaskfkFileMapper">
	<resultMap type="com.hisign.xingzhen.xz.api.model.TaskfkFileModel" id="BaseResultMap">
      <result column="ID" property="id" jdbcType="VARCHAR"/>
      <result column="TASKFK_ID" property="taskfkId" jdbcType="VARCHAR"/>
      <result column="FILE_NAME" property="fileName" jdbcType="VARCHAR"/>
      <result column="FILE_OLD_NAME" property="fileOldName" jdbcType="VARCHAR"/>
      <result column="FILE_PATH" property="filePath" jdbcType="VARCHAR"/>
      <result column="FILE_TYPE" property="fileType" jdbcType="VARCHAR"/>
      <result column="FILE_SIZE" property="fileSize" jdbcType="DECIMAL"/>
      <result column="DELETE_FLAG" property="deleteFlag" jdbcType="VARCHAR"/>
      <result column="CREATOR" property="creator" jdbcType="VARCHAR"/>
      <result column="CREATETIME" property="createtime" jdbcType="TIMESTAMP"/>
	</resultMap>
	
	<sql id="Conditions_Where_Clause">
 	  <foreach collection="oredCriteria" open="where" item="o" separator="or">
	   <if test="o.valid">
	    (
	     <trim suffixOverrides="and">
	     <foreach collection="o.criteriaWithoutValue" item="oc" separator="and">${oc} and </foreach>
	     <foreach collection="o.criteriaWithSingleValue" item="os">${os.condition} #{os.val} and </foreach>
	     <foreach collection="o.criteriaWithBetweenValue" item="ob">${ob.condition} #{ob.val[0]} and #{ob.val[1]} and </foreach>
	     <foreach collection="o.criteriaWithListValue" item="ol">${ol.condition}
	       <foreach collection="ol.val" open="(" close=")" item="olv" separator=",">#{olv}</foreach>
	     </foreach>
	     </trim>
	    )
	   </if>
 	  </foreach>
	</sql>
	
	<sql id="Update_Conditions_Where_Clause">
	 <if test="conditions!=null">
 	  <foreach collection="conditions.oredCriteria" open="where" item="o" separator="or">
	   <if test="o.valid">
	    (
	     <trim suffixOverrides="and">
	     <foreach collection="o.criteriaWithoutValue" item="oc" separator="and">${oc} and </foreach>
	     <foreach collection="o.criteriaWithSingleValue" item="os">${os.condition} #{os.val} and </foreach>
	     <foreach collection="o.criteriaWithBetweenValue" item="ob">${ob.condition} #{ob.val[0]} and #{ob.val[1]} and</foreach>
	     <foreach collection="o.criteriaWithListValue" item="ol">${ol.condition}
	       <foreach collection="ol.val" open="(" close=")" item="olv" separator=",">#{olv}</foreach>
	     </foreach>
	     </trim>
	    )
	   </if>
 	  </foreach>
     </if>
	</sql>
	
    <sql id="Base_Column_List">
        ID,
        TASKFK_ID,
        FILE_NAME,
        FILE_OLD_NAME,
        FILE_PATH,
        FILE_TYPE,
        FILE_SIZE,
        DELETE_FLAG,
        CREATOR,
        CREATETIME
    </sql>
    
    <insert id="insert" keyProperty="id" useGeneratedKeys="true" parameterType="com.hisign.xingzhen.xz.api.entity.TaskfkFile">
    	<selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
        SELECT sys_guid() from DUAL
    	</selectKey>
        INSERT INTO t_taskfk_file (
		    ID,
		    TASKFK_ID,
		    FILE_NAME,
		    FILE_OLD_NAME,
		    FILE_PATH,
		    FILE_TYPE,
		    FILE_SIZE,
		    DELETE_FLAG,
		    CREATOR,
		    CREATETIME
        ) VALUES (
		    #{id,jdbcType=VARCHAR},
		    #{taskfkId,jdbcType=VARCHAR},
		    #{fileName,jdbcType=VARCHAR},
		    #{fileOldName,jdbcType=VARCHAR},
		    #{filePath,jdbcType=VARCHAR},
		    #{fileType,jdbcType=VARCHAR},
		    #{fileSize,jdbcType=DECIMAL},
		    #{deleteFlag,jdbcType=VARCHAR},
		    #{creator,jdbcType=VARCHAR},
		    #{createtime,jdbcType=TIMESTAMP}
        )
    </insert>
    
    <insert id="insertNotNull" keyProperty="id" useGeneratedKeys="true" parameterType="com.hisign.xingzhen.xz.api.entity.TaskfkFile">
    <selectKey resultType="java.lang.String" order="BEFORE" keyProperty="id">
        SELECT sys_guid() from DUAL
    </selectKey>
    insert into t_taskfk_file
    <trim prefix="(" suffix=")" suffixOverrides=",">
	    <if test="id !=null  and id != '' ">
	    ID,
	    </if>
	    <if test="taskfkId !=null  and taskfkId != '' ">
	    TASKFK_ID,
	    </if>
	    <if test="fileName !=null  and fileName != '' ">
	    FILE_NAME,
	    </if>
	    <if test="fileOldName !=null  and fileOldName != '' ">
	    FILE_OLD_NAME,
	    </if>
	    <if test="filePath !=null  and filePath != '' ">
	    FILE_PATH,
	    </if>
	    <if test="fileType !=null  and fileType != '' ">
	    FILE_TYPE,
	    </if>
	    <if test="fileSize !=null ">
	    FILE_SIZE,
	    </if>
	    <if test="deleteFlag !=null  and deleteFlag != '' ">
	    DELETE_FLAG,
	    </if>
	    <if test="creator !=null  and creator != '' ">
	    CREATOR,
	    </if>
	    <if test="createtime !=null ">
	    CREATETIME
	    </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
     	<if test="id !=null  and id != '' ">
	    #{id,jdbcType=VARCHAR},
	    </if>
     	<if test="taskfkId !=null  and taskfkId != '' ">
	    #{taskfkId,jdbcType=VARCHAR},
	    </if>
     	<if test="fileName !=null  and fileName != '' ">
	    #{fileName,jdbcType=VARCHAR},
	    </if>
     	<if test="fileOldName !=null  and fileOldName != '' ">
	    #{fileOldName,jdbcType=VARCHAR},
	    </if>
     	<if test="filePath !=null  and filePath != '' ">
	    #{filePath,jdbcType=VARCHAR},
	    </if>
     	<if test="fileType !=null  and fileType != '' ">
	    #{fileType,jdbcType=VARCHAR},
	    </if>
     	<if test="fileSize !=null ">
	    #{fileSize,jdbcType=DECIMAL},
	    </if>
     	<if test="deleteFlag !=null  and deleteFlag != '' ">
	    #{deleteFlag,jdbcType=VARCHAR},
	    </if>
     	<if test="creator !=null  and creator != '' ">
	    #{creator,jdbcType=VARCHAR},
	    </if>
     	<if test="createtime !=null ">
	    #{createtime,jdbcType=TIMESTAMP}
	    </if>
    </trim>
  </insert>
	
	<insert id="batchInsert" parameterType="java.util.List">
		INSERT INTO t_taskfk_file (
		   	ID,
		   	TASKFK_ID,
		   	FILE_NAME,
		   	FILE_OLD_NAME,
		   	FILE_PATH,
		   	FILE_TYPE,
		   	FILE_SIZE,
		   	DELETE_FLAG,
		   	CREATOR,
		   	CREATETIME
        ) 
		<foreach collection="list" open="(" close=")" item="item" index="index" separator="union all" > 
			 select
		    #{item.id,jdbcType=VARCHAR},
		    #{item.taskfkId,jdbcType=VARCHAR},
		    #{item.fileName,jdbcType=VARCHAR},
		    #{item.fileOldName,jdbcType=VARCHAR},
		    #{item.filePath,jdbcType=VARCHAR},
		    #{item.fileType,jdbcType=VARCHAR},
		    #{item.fileSize,jdbcType=DECIMAL},
		    #{item.deleteFlag,jdbcType=VARCHAR},
		    #{item.creator,jdbcType=VARCHAR},
		    #{item.createtime,jdbcType=TIMESTAMP}
	        from dual
		</foreach> 
	</insert>
	
    <!-- 更新 -->
    <update id="update" parameterType="com.hisign.xingzhen.xz.api.entity.TaskfkFile">
        UPDATE t_taskfk_file
        <trim prefix="SET" suffixOverrides=",">
		    TASKFK_ID=#{taskfkId,jdbcType=VARCHAR},
		    FILE_NAME=#{fileName,jdbcType=VARCHAR},
		    FILE_OLD_NAME=#{fileOldName,jdbcType=VARCHAR},
		    FILE_PATH=#{filePath,jdbcType=VARCHAR},
		    FILE_TYPE=#{fileType,jdbcType=VARCHAR},
		    FILE_SIZE=#{fileSize,jdbcType=DECIMAL},
		    DELETE_FLAG=#{deleteFlag,jdbcType=VARCHAR},
		    CREATOR=#{creator,jdbcType=VARCHAR},
		    CREATETIME=#{createtime,jdbcType=TIMESTAMP}
        </trim>
        WHERE
        ID = #{id,jdbcType=VARCHAR}
    </update>
	
    <update id="updateNotNull" parameterType="com.hisign.xingzhen.xz.api.entity.TaskfkFile">
        UPDATE t_taskfk_file
        <trim prefix="SET" suffixOverrides=",">
            <if test="taskfkId !=null  and taskfkId != '' ">
                TASKFK_ID = #{taskfkId,jdbcType=VARCHAR},
            </if>
            <if test="fileName !=null  and fileName != '' ">
                FILE_NAME = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="fileOldName !=null  and fileOldName != '' ">
                FILE_OLD_NAME = #{fileOldName,jdbcType=VARCHAR},
            </if>
            <if test="filePath !=null  and filePath != '' ">
                FILE_PATH = #{filePath,jdbcType=VARCHAR},
            </if>
            <if test="fileType !=null  and fileType != '' ">
                FILE_TYPE = #{fileType,jdbcType=VARCHAR},
            </if>
            <if test="fileSize !=null ">
                FILE_SIZE = #{fileSize,jdbcType=DECIMAL},
            </if>
            <if test="deleteFlag !=null  and deleteFlag != '' ">
                DELETE_FLAG = #{deleteFlag,jdbcType=VARCHAR},
            </if>
            <if test="creator !=null  and creator != '' ">
                CREATOR = #{creator,jdbcType=VARCHAR},
            </if>
            <if test="createtime !=null ">
                CREATETIME = #{createtime,jdbcType=TIMESTAMP}
            </if>
        </trim>
         WHERE  ID = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateCustom" parameterType="com.hisign.bfun.bmodel.UpdateParams">
    UPDATE t_taskfk_file
    <trim prefix="SET" suffixOverrides=",">
    	<foreach collection="fields" item="item" index="index" separator="," >
        ${item}  #{values[${index}]}
        </foreach>
    </trim>
	<include refid="Update_Conditions_Where_Clause" />	
	<if test="conditions!=null">
		<if test="conditions.orderByClause!=null"> ${conditions.orderByClause}</if> 
	</if>	
    </update>
    
    <!-- 按Id删除 -->
    <delete id="deleteById" parameterType="java.lang.String">
        DELETE FROM t_taskfk_file WHERE
         ID = #{id,jdbcType=VARCHAR}
    </delete>

    <!--根据list(ids)删除对象-->
    <delete id="deleteByIds">
        DELETE FROM t_taskfk_file
        WHERE id in
        <foreach collection="list" item="id" open="(" separator="," close=")">${id}</foreach>
    </delete>

	<!--根据自定义删除对象-->
    <delete id="deleteCustom" parameterType="com.hisign.bfun.bmodel.Conditions">
        DELETE FROM t_taskfk_file
        <include refid="Conditions_Where_Clause" />
    </delete>
    
    <select id="findById" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT  
	    <include refid="Base_Column_List" />
        FROM t_taskfk_file 
        WHERE
        ID = #{id,jdbcType=VARCHAR}
        and rownum = 1 
    </select>
    
    <select id="findByEntity" parameterType="com.hisign.xingzhen.xz.api.entity.TaskfkFile" resultMap="BaseResultMap">
        SELECT  
	    <include refid="Base_Column_List" />
        FROM t_taskfk_file 
        WHERE 1 = 1
	     	<if test="id != null  and id != '' ">
		   	 and ID=#{id,jdbcType=VARCHAR}
		    </if>
	     	<if test="taskfkId != null  and taskfkId != '' ">
		   	 and TASKFK_ID=#{taskfkId,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileName != null  and fileName != '' ">
		   	 and FILE_NAME=#{fileName,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileOldName != null  and fileOldName != '' ">
		   	 and FILE_OLD_NAME=#{fileOldName,jdbcType=VARCHAR}
		    </if>
	     	<if test="filePath != null  and filePath != '' ">
		   	 and FILE_PATH=#{filePath,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileType != null  and fileType != '' ">
		   	 and FILE_TYPE=#{fileType,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileSize != null ">
		   	 and FILE_SIZE=#{fileSize,jdbcType=DECIMAL}
		    </if>
	     	<if test="deleteFlag != null  and deleteFlag != '' ">
		   	 and DELETE_FLAG=#{deleteFlag,jdbcType=VARCHAR}
		    </if>
	     	<if test="creator != null  and creator != '' ">
		   	 and CREATOR=#{creator,jdbcType=VARCHAR}
		    </if>
	     	<if test="createtime != null ">
		   	 and CREATETIME=#{createtime,jdbcType=TIMESTAMP}
		    </if>
	 	and rownum = 1 
    </select>
    
    <select id="findListByEntity" parameterType="com.hisign.xingzhen.xz.api.entity.TaskfkFile" resultMap="BaseResultMap">
        SELECT  
	    <include refid="Base_Column_List" />
        FROM t_taskfk_file 
        WHERE 1 = 1
	     	<if test="id != null  and id != '' ">
                and ID=#{id,jdbcType=VARCHAR}
		    </if>
	     	<if test="taskfkId != null  and taskfkId != '' ">
                and TASKFK_ID=#{taskfkId,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileName != null  and fileName != '' ">
                and FILE_NAME=#{fileName,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileOldName != null  and fileOldName != '' ">
                and FILE_OLD_NAME=#{fileOldName,jdbcType=VARCHAR}
		    </if>
	     	<if test="filePath != null  and filePath != '' ">
                and FILE_PATH=#{filePath,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileType != null  and fileType != '' ">
                and FILE_TYPE=#{fileType,jdbcType=VARCHAR}
		    </if>
	     	<if test="fileSize != null ">
                and FILE_SIZE=#{fileSize,jdbcType=DECIMAL}
		    </if>
	     	<if test="deleteFlag != null  and deleteFlag != '' ">
                and DELETE_FLAG=#{deleteFlag,jdbcType=VARCHAR}
		    </if>
	     	<if test="creator != null  and creator != '' ">
                and CREATOR=#{creator,jdbcType=VARCHAR}
		    </if>
	     	<if test="createtime != null ">
                and CREATETIME=#{createtime,jdbcType=TIMESTAMP}
		    </if>
    </select>
    
    <select id="findByCondition" parameterType="com.hisign.bfun.bmodel.Conditions" resultMap="BaseResultMap">
        SELECT 
        <choose>
           <when test="returnFields != null">
           <foreach collection="returnFields" item="f" separator=",">${f}</foreach>
           </when>
           <otherwise>
	       <include refid="Base_Column_List" />
           </otherwise>
        </choose>
        FROM t_taskfk_file
        <if test="connectTable!=null">
	        <foreach collection="connectTable" item="tb">
	       	,${tb}
	       	</foreach>
        </if>
        <include refid="Conditions_Where_Clause" />
        and rownum = 1 
    </select>

    <select id="findList"  parameterType="com.hisign.bfun.bmodel.Conditions" resultMap="BaseResultMap">
    	select p.* from(
	    select
	      rownum,rownum as rn,a.* from (
	      select t.* from (
	      
        SELECT
        <if test="distinct!=false">
        DISTINCT
        </if>
        <choose>
           <when test="returnFields != null">
           <foreach collection="returnFields" item="f" separator=",">${f}</foreach>
           </when>
           <otherwise>
	       <include refid="Base_Column_List" />
           </otherwise>
        </choose>
        FROM t_taskfk_file
        <if test="connectTable!=null">
	        <foreach collection="connectTable" item="tb">
	       	,${tb}
	       	</foreach>
        </if>
        <include refid="Conditions_Where_Clause" />
        <if test="orderByClause!=null">${orderByClause}</if> 
        
        ) t ) a
        <if test="end !=null and end !=0">
            where rownum <![CDATA[<=]]> #{end,jdbcType=INTEGER}
        </if>
        ) p
        <if test="begin !=null and begin !=0">
            where rn >= #{begin,jdbcType=INTEGER}
        </if>
    </select>

    <select id="findCount" parameterType="com.hisign.bfun.bmodel.Conditions" resultType="java.lang.Long">
        SELECT
        COUNT(1)
        FROM t_taskfk_file
        <if test="connectTable!=null">
	        <foreach collection="connectTable" item="tb">
	       	,${tb}
	       	</foreach>
        </if>
        <include refid="Conditions_Where_Clause" />
    </select>

    <select id="findMaxId" resultType="java.lang.String">
        SELECT
        MAX(id)
        FROM t_taskfk_file
    </select>
   
</mapper>
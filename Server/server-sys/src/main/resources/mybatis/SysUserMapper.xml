<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hisign.framework.sys.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.hisign.framework.sys.api.model.SysUser" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="username" property="userName" jdbcType="VARCHAR" />
    <result column="password" property="userPwd" jdbcType="VARCHAR" />
    <result column="true_name" property="trueName" jdbcType="VARCHAR" />
    <result column="user_unit" property="userUnit" jdbcType="VARCHAR" />
    <result column="TECH_ID" property="techId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="OPEN_FLAG" property="openFlag" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, true_name, user_unit, TECH_ID
  </sql>
  <sql id="ForCount" >
    count(1)
  </sql>
  <sql id="select_By_Filter_For_Where" >
    <where>
		<if test="userName != null and userName != ''" >
			and username = #{userName,jdbcType=VARCHAR}
		</if>
		<if test="userPwd != null and userPwd != ''" >
	        and password = #{userPwd,jdbcType=VARCHAR}
	    </if>
  	</where>
  </sql>

  <sql id="select_By_Filter_For_Where2" >
    <if test="userName != null and userName != ''">
      and UR.USERNAME like '%' || #{userName,jdbcType=VARCHAR} || '%' escape '\'
    </if>
    <if test="roleId != null and roleId != ''">
      and UR.USERNAME not in (select
      su.USERNAME as userName
      from SYS_USER su,SYS_USER_ROLE ur
      where 	su.ID=ur.user_id
      and	ur.role_id = #{roleId,jdbcType=VARCHAR})
    </if>
    <if test="openFlag != null and openFlag != ''">
      and UR.OPEN_FLAG = #{openFlag,jdbcType=VARCHAR}
    </if>
    <if test="trueName != null and trueName != ''">
      and UR.TRUE_NAME like '%' || #{trueName,jdbcType=VARCHAR} || '%' escape '\'
    </if>
    
    <if test="userUnit != null and userUnit != ''">
      and T1.ORG_ID IN(SELECT ORG_ID FROM SYS_ORGANIZATION S  START WITH S.ORG_ID=#{userUnit,jdbcType=VARCHAR} CONNECT BY PRIOR ORG_ID = SUPER_ID)
    </if>
    
    <if test="userIds !=null and userIds.size() > 0">
       AND  UR.USER_ID IN 
			<foreach collection="userIds" item="userId" open="(" separator="," close=")">#{userId}</foreach>
    </if>
    
  </sql>
  <select id="getUserListByRoleNo" resultType="com.hisign.framework.sys.api.model.SysUser" parameterType="java.lang.String">
    SELECT T1.USER_ID as userId,T2.USER_NAME as trueName,T2.USER_ID AS id,T2.USERNAME as userName from (
	SELECT UR.USER_ID  from SYS_ROLE r,
	SYS_USER_ROLE ur where r.ID=UR.ROLE_ID and r.OPEN_FLAG=1 and  r.ROLE_NO = #{roleNo,jdbcType=VARCHAR}
	)t1 ,(SELECT u.id,ui.user_name,ui.USER_ID,u.USERNAME from SYS_USER u,SYS_USER_INFO ui where u.USER_ID= ui.USER_ID 
	<if test="orgId !=null and orgId !='' ">
	   and UI.ORG_ID= #{orgId,jdbcType=VARCHAR} 
	</if>
	) t2 where T1.USER_ID=T2."ID" 
  </select>
  <select id="findSysUserListByFilter" parameterType="com.hisign.framework.sys.api.model.SysUser" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sys_user
    <include refid="select_By_Filter_For_Where" />
  </select>

  <select id="findSysUserListByFilterForCount" parameterType="com.hisign.framework.sys.api.model.SysUser" resultType="java.lang.Integer">
    select
    <include refid="ForCount" />
    from sys_user
    <include refid="select_By_Filter_For_Where" />
  </select>

  <select id="findSysUserByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    id, username, password, true_name, user_unit, TECH_ID,USER_ID,OPEN_FLAG,
    '' AS userUnit
    from sys_user t
    where t.username = #{userName,jdbcType=VARCHAR}
  </select>
  
  <select id="findSysUserById" resultType="com.hisign.framework.sys.api.model.SysUser" parameterType="java.lang.String" >
    select
      ID as id,
      USERNAME as userName,
      USER_ID as userId,
      USER_LEVEL as userLevel,
      PASSWORD as userPwd,
      TRUE_NAME as trueName,
      OPEN_FLAG as openFlag,
      OPEN_FLAG as openFlagZw,
      DEFAULT_MODULE as defaultModule,
      REMARK as remark,
      CREATE_PID as createUser,
      CREATE_DATE as createDatetime,
      MODIFY_PID as updateUser,
      POLICE_ID as policeId,
      CARD_ID as cardId,
      USER_TEL as userTel,
      USER_UNIT as userUnit,
      TECH_ID as techId,
      '' as userUnitZh,
      MODIFY_DATE as modifyDatetime
    from sys_user 
    where ID = #{userId,jdbcType=VARCHAR}
  </select>

  <select id="findSysUserListByUserFilter" parameterType="com.hisign.framework.sys.api.model.SysUser" resultType="com.hisign.framework.sys.api.model.SysUser">
    select p.* from(
    select
      rownum,rownum as rn,a.* from (
      select t.* from (
        select
          UR.ID as id,
          UR.USERNAME as userName,
          UR.USER_LEVEL as userLevel,
          UR.PASSWORD as userPwd,
          UR.USER_ID as userId,
          UR.TRUE_NAME as trueName,
          UR.OPEN_FLAG as openFlag,
          UR.OPEN_FLAG as openFlagZw,
          UR.DEFAULT_MODULE as defaultModule,
          UR.REMARK as remark,
          UR.CREATE_PID as createUser,
          UR.CREATE_DATE as createDatetime,
          UR.MODIFY_PID as updateUser,
          UR.POLICE_ID as policeId,
          UR.CARD_ID as cardId,
          UR.USER_TEL as userTel,
          T1.ORG_ID as userUnit,
          T1.ORG_NAME as userUnitZh,
          get_RoleName_by_id(UR.id,'1') as roleNameString,
          UR.MODIFY_DATE as updateDatetime,
          UR.MODIFY_DATE
        from SYS_USER ur,
		(select     o.USER_ID,
			         o.ORG_ID,
		          (CASE when T1.SUPER_NAME IS not null THEN T1.SUPER_NAME||'/'||o.ORG_NAME ELSE o.ORG_NAME END) as ORG_NAME
			        from SYS_USER_INFO o
		LEFT JOIN (
		SELECT s.ORG_NAME,s.ORG_ID,(SELECT o.ORG_NAME from SYS_ORGANIZATION o where o.ORG_ID=s.SUPER_ID) as SUPER_NAME FROM SYS_ORGANIZATION s
		)t1 on (T1.ORG_ID=o.ORG_ID)) t1
		
		where UR.USER_ID=T1.USER_ID

        <include refid="select_By_Filter_For_Where2" />
       ) t
      where 1=1
      <if test="roleName != null and roleName != ''">
        and roleNameString like '%' || #{roleName,jdbcType=VARCHAR} || '%'
      </if>
      <if test="orderByString != null and orderByString != ''">
        order by ${orderByString}
      </if>
      ) a
      <if test="end !=null and end !=0">
        where rownum <![CDATA[<=]]> #{end,jdbcType=INTEGER}
      </if>
      ) p
    <if test="begin !=null and begin !=0">
      where rn >= #{begin,jdbcType=INTEGER}
    </if>
  </select>

  <select id="findSysUserListByUserFilterForCount" parameterType="com.hisign.framework.sys.api.model.SysUser" resultType="java.lang.Integer">
    select
      count(1)
    from
      ( 
        select
         
          get_RoleName_by_id(UR.id,'1') as roleNameString

		        from SYS_USER ur,
		(select     o.USER_ID,
			         o.ORG_ID,
		          (CASE when T1.SUPER_NAME IS not null THEN T1.SUPER_NAME||'/'||o.ORG_NAME ELSE o.ORG_NAME END) as ORG_NAME
			        from SYS_USER_INFO o
		LEFT JOIN (
		SELECT s.ORG_NAME,s.ORG_ID,(SELECT o.ORG_NAME from SYS_ORGANIZATION o where o.ORG_ID=s.SUPER_ID) as SUPER_NAME FROM SYS_ORGANIZATION s
		)t1 on (T1.ORG_ID=o.ORG_ID)) t1
		
		where UR.USER_ID=T1.USER_ID
        <include refid="select_By_Filter_For_Where2" />
        ) t
      where 1=1
      <if test="roleName != null and roleName != ''">
        and roleNameString like '%' || #{roleName,jdbcType=VARCHAR} || '%'
      </if>
  </select>

  <delete id="deleteSysUserById" parameterType="java.lang.String">
    delete from SYS_USER where ID= #{userId,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteSysUserRoleByUserId" parameterType="java.lang.String">
    delete from SYS_USER_ROLE where USER_ID=#{userId,jdbcType=VARCHAR}
  </delete>

  <select id="findSysUserRoleListByFilter" parameterType="com.hisign.framework.sys.api.model.SysUser" resultType="com.hisign.framework.sys.api.model.SysUser">
    select
      ID as id,
      ROLE_ID as roleId,
      CREATE_PID as createUser,
      CREATE_DATE as createDatetime,
      MODIFY_PID as modifyUser,
      MODIFY_DATE as modifyDatetime
    from SYS_USER_ROLE
    where 1=1
    <if test="id != null and id != ''">
      and USER_ID = #{id,jdbcType=VARCHAR}
    </if>
    <if test="roleId != null and roleId != ''">
      and ROLE_ID = #{roleId,jdbcType=VARCHAR}
    </if>
  </select>
  <select id="checkExistByUserName" parameterType="java.lang.String" resultType="java.lang.Integer">
   select COUNT(1) from SYS_USER WHERE USERNAME= #{userName,jdbcType=VARCHAR}
  </select>
  <insert id="insertSysUserRole" parameterType="com.hisign.framework.sys.api.model.SysUserRole">
    insert into SYS_USER_ROLE
    (
      ID,
      USER_ID,
      ROLE_ID,
      CREATE_PID,
      CREATE_DATE
    ) values (
      #{id,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR},
      #{roleId,jdbcType=VARCHAR},
      #{trueName,jdbcType=VARCHAR},
      sysdate
    )
  </insert>


  <insert id="insertSysUserRoleList" parameterType="java.util.List">
    insert into SYS_USER_ROLE
    (
      ID,
      USER_ID,
      ROLE_ID,
      CREATE_DATE
    ) 
    <foreach collection="list" item="item" index="index" separator="union" open="(" close=")">
        select sys_guid(),
        #{item.userId,jdbcType=VARCHAR},
        #{item.roleId,jdbcType=VARCHAR},
        sysdate from dual
    </foreach>
  </insert>


  <update id="updateSysUserById" parameterType="com.hisign.framework.sys.api.model.SysUser">
    UPDATE SYS_USER SET
    USERNAME = #{userName,jdbcType=VARCHAR},
    <if test="newPassword != null and newPassword != ''">
      PASSWORD = #{newPassword,jdbcType=VARCHAR},
    </if>
      TRUE_NAME = #{trueName,jdbcType=VARCHAR},
      OPEN_FLAG = #{openFlag,jdbcType=VARCHAR},
      USER_LEVEL = #{userLevel,jdbcType=VARCHAR},
      <if test="remark != null and remark != ''">
      REMARK = #{remark,jdbcType=VARCHAR},
       </if>
      <if test="modifyUser != null and modifyUser != ''">
      MODIFY_PID = #{modifyUser,jdbcType=VARCHAR},
       </if>
      POLICE_ID = #{policeId,jdbcType=VARCHAR},
      <if test="cardId != null and cardId != ''">
      CARD_ID = #{cardId,jdbcType=VARCHAR},
      </if>
      <if test="userTel != null and userTel != ''">
        USER_TEL = #{userTel,jdbcType=VARCHAR},
      </if>
      <if test="userUnit != null and userUnit != ''">
      USER_UNIT = #{userUnit,jdbcType=VARCHAR},
      </if>
      <if test="techId != null and techId != ''">
      TECH_ID = #{techId,jdbcType=VARCHAR},
      </if>
      MODIFY_DATE = sysdate
      WHERE ID = #{id,jdbcType=VARCHAR}
  </update>


  <insert id="insertSysUser" parameterType="com.hisign.framework.sys.api.model.SysUser">
    insert into SYS_USER
    (
      ID,
      USERNAME,
      PASSWORD,
      TRUE_NAME,
      OPEN_FLAG,
      DEFAULT_MODULE,
      USER_LEVEL,
      REMARK,
      CREATE_PID,
      CREATE_DATE,
      MODIFY_PID,
      MODIFY_DATE,
      POLICE_ID,
      CARD_ID,
      USER_TEL,
      USER_UNIT,
      TECH_ID,
      USER_ID
    ) values (
      #{id,jdbcType=VARCHAR},
      #{userName,jdbcType=VARCHAR},
      #{userPwd,jdbcType=VARCHAR},
      #{trueName,jdbcType=VARCHAR},
      #{openFlag,jdbcType=VARCHAR},
      #{defaultModule,jdbcType=VARCHAR},
      #{userLevel,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR},
      #{createUser,jdbcType=VARCHAR},
      sysdate,
      #{modifyUser,jdbcType=VARCHAR},
      sysdate,
      #{policeId,jdbcType=VARCHAR},
      #{cardId,jdbcType=VARCHAR},
      #{userTel,jdbcType=VARCHAR},
      #{userUnit,jdbcType=VARCHAR},
      #{techId,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR}
    )
  </insert>

  <select id="findUserListByRoleId" parameterType="java.lang.String" resultType="com.hisign.framework.sys.api.model.SysUser">
    select
      su.ID as id,
      su.USERNAME as userName,
      su.USER_ID as userId,
      su.PASSWORD as userPwd,
      su.USER_LEVEL as userLevel,
      su.TRUE_NAME as trueName,
      su.OPEN_FLAG as openFlag,
      su.DEFAULT_MODULE as defaultModule,
      su.REMARK as remark,
      su.CREATE_PID as createUser,
      su.CREATE_DATE as createDatetime,
      su.MODIFY_PID as modifyUser,
      su.POLICE_ID as policeId,
      su.CARD_ID as cardId,
      su.USER_TEL as userTel,
      su.USER_UNIT as userUnit,
      su.MODIFY_DATE as modifyDatetime
    from SYS_USER su,SYS_USER_ROLE ur
    where 	su.ID=ur.user_id
    and		ur.role_id = #{roleId,jdbcType=VARCHAR}
  </select>


  <update id="updateByUserId" parameterType="java.lang.String" >
     UPDATE SYS_USER set USER_ID=NULL,TRUE_NAME=NULL,USER_UNIT=NULL where USER_ID=#{userId,jdbcType=VARCHAR}
  </update>

  <insert id="addUserToken"
          parameterType="com.hisign.framework.sys.api.model.SysUserToken">
    insert into SYS_USER_TOKEN
    (
      ID,
      USER_ID,
      TOKEN
    ) values (
      sys_guid(),
      #{userId,jdbcType=VARCHAR},
      #{token,jdbcType=VARCHAR}
    )
  </insert>

  <select id="getUserByToken" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      id,
      username,
      password,
      true_name,
      '' AS user_unit,
      TECH_ID
    from SYS_USER t
    where 1= 1
    and ID = (select USER_ID from SYS_USER_TOKEN where TOKEN = #{value,jdbcType=VARCHAR} and rownum = 1)
    and OPEN_FLAG = '1'
  </select>

  <delete id="deleteUserToken"
          parameterType="java.lang.String">
    delete from SYS_USER_TOKEN where TOKEN = #{value,jdbcType=VARCHAR}
  </delete>


  <update id="updatePassword" parameterType="com.hisign.framework.sys.api.model.SysUser">
    UPDATE SYS_USER SET
      PASSWORD = #{newPassword,jdbcType=VARCHAR},
      MODIFY_PID = #{userName,jdbcType=VARCHAR},
      MODIFY_DATE = sysdate
    WHERE ID = #{id, jdbcType=VARCHAR}
  </update>
  
  <select id="getReceiverList" resultType="java.util.HashMap" parameterType="java.util.HashMap" >  
      SELECT s.USERNAME,s.TRUE_NAME,UI.ORG_ID FROM SYS_USER s,SYS_USER_INFO ui where s.USER_ID = ui.USER_ID and s.OPEN_FLAG = 1
      <if test="orgIds !=null and orgIds.size() > 0">
       AND  ui.ORG_ID IN(SELECT ORG_ID FROM SYS_ORGANIZATION S  START WITH
           S.ORG_ID IN
           <foreach collection="orgIds" item="orgId" open="(" separator="," close=")">#{orgId}</foreach>
           CONNECT BY PRIOR ORG_ID = SUPER_ID)
      </if> 
  </select>

</mapper>